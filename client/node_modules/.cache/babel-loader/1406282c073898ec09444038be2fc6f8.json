{"ast":null,"code":"import { GETUSSER, POSTUSER } from \"./type\";\nimport axios from \"axios\"; // export const getalluser = () => {\n//   return (dispatch) =>\n//     axios\n//       .get(\"http://localhost:8000/users\")\n//       .then((res) => dispatch(usergetall(res.data)))\n//       .catch((error) => console.log(error));\n// };\n\nconst usergetall = payload => ({\n  type: GETUSSER,\n  payload\n});\n\nexport const postuser = obj => {\n  console.log(obj);\n  return dispatch => axios.post(\"http://localhost:8000/users\", obj).then(res => dispatch(userpost(obj))).catch(err => console.log(err));\n};\n\nconst userpost = payload => ({\n  type: POSTUSER,\n  payload\n});","map":{"version":3,"sources":["/home/nessrine/Bureau/asimplon/restofinal/back/client/src/actions/useraction.js"],"names":["GETUSSER","POSTUSER","axios","usergetall","payload","type","postuser","obj","console","log","dispatch","post","then","res","userpost","catch","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,QAAnC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,UAAU,GAAIC,OAAD,KAAc;AAC/BC,EAAAA,IAAI,EAAEL,QADyB;AAE/BI,EAAAA;AAF+B,CAAd,CAAnB;;AAIA,OAAO,MAAME,QAAQ,GAAIC,GAAD,IAAS;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,SAAQG,QAAD,IACLR,KAAK,CACFS,IADH,CACQ,6BADR,EACuCJ,GADvC,EAEGK,IAFH,CAESC,GAAD,IAASH,QAAQ,CAACI,QAAQ,CAACP,GAAD,CAAT,CAFzB,EAGGQ,KAHH,CAGUC,GAAD,IAASR,OAAO,CAACC,GAAR,CAAYO,GAAZ,CAHlB,CADF;AAKD,CAPM;;AAQP,MAAMF,QAAQ,GAAIV,OAAD,KAAc;AAC7BC,EAAAA,IAAI,EAAEJ,QADuB;AAE7BG,EAAAA;AAF6B,CAAd,CAAjB","sourcesContent":["import { GETUSSER, POSTUSER } from \"./type\";\nimport axios from \"axios\";\n\n\n// export const getalluser = () => {\n//   return (dispatch) =>\n//     axios\n//       .get(\"http://localhost:8000/users\")\n//       .then((res) => dispatch(usergetall(res.data)))\n\n//       .catch((error) => console.log(error));\n// };\n\nconst usergetall = (payload) => ({\n  type: GETUSSER,\n  payload,\n});\nexport const postuser = (obj) => {\n  console.log(obj);\n  return (dispatch) =>\n    axios\n      .post(\"http://localhost:8000/users\", obj)\n      .then((res) => dispatch(userpost(obj)))\n      .catch((err) => console.log(err));\n};\nconst userpost = (payload) => ({\n  type: POSTUSER,\n  payload,\n});\n"]},"metadata":{},"sourceType":"module"}